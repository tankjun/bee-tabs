
import { Con, Row, Col } from 'bee-layout';
import { Panel } from 'bee-panel';
import React, { Component } from 'react';
import ReactDOM from 'react-dom';
import Button from 'bee-button';

import Tabs, { TabPane } from '../src';
import TabContent from '../src/TabContent';
import ScrollableInkTabBar from '../src/ScrollableInkTabBar';

const CARET = <i className="uf uf-chevronarrowdown"></i>;

const CARETUP = <i className="uf uf-chevronarrowup"></i>;


var Demo1 = require("./demolist/Demo1");var Demo2 = require("./demolist/Demo2");var Demo2___jb_tmp___ = require("./demolist/Demo2___jb_tmp___");var Demo3 = require("./demolist/Demo3");var Demo4 = require("./demolist/Demo4");var Demo5 = require("./demolist/Demo5");var Demo6 = require("./demolist/Demo6");var DemoArray = [{"example":<Demo1 />,"title":"Demo1","code":"import React, {Component} from 'react';\r\nimport Tabs, {TabPane} from 'bee-tabs';\r\n\r\nfunction callback() {\r\n\r\n}\r\n\r\nclass Demo1 extends Component {\r\n    render() {\r\n        return (\r\n            <Tabs\r\n                defaultActiveKey=\"1\"\r\n                onChange={callback}\r\n                tabBarStyle=\"fill\"\r\n                className=\"demo-tabs\"\r\n            >\r\n                <TabPane tab='望庐山瀑布' key=\"1\">\r\n                    <ul>\r\n                        <li>日照香炉生紫烟，</li>\r\n                        <li>遥看瀑布挂前川。</li>\r\n                        <li>飞流直下三千尺，</li>\r\n                        <li>疑是银河落九天。</li>\r\n                    </ul>\r\n\r\n\r\n                </TabPane>\r\n                <TabPane tab='早发白帝城' key=\"2\">\r\n                    <ul>\r\n                        <li>朝辞白帝彩云间，</li>\r\n                        <li>千里江陵一日还。</li>\r\n                        <li>两岸猿声啼不住，</li>\r\n                        <li>轻舟已过万重山。</li>\r\n                    </ul>\r\n                </TabPane>\r\n                <TabPane tab='菩萨蛮·平林漠漠烟如织' key=\"3\">\r\n                    <ul>\r\n                        <li>平林漠漠烟如织，寒山一带伤心碧。</li>\r\n                        <li>暝色入高楼，有人楼上愁。</li>\r\n                        <li>玉阶空伫立，宿鸟归飞急。</li>\r\n                        <li>何处是归程？长亭连短亭</li>\r\n                    </ul>\r\n                </TabPane>\r\n                <TabPane tab='关山月' key=\"4\">\r\n                    <ul>\r\n                        <li>明月出天山，苍茫云海间。</li>\r\n                        <li>长风几万里，吹度玉门关。</li>\r\n                        <li>汉下白登道，胡窥青海湾。</li>\r\n                        <li>由来征战地，不见有人还。</li>\r\n                    </ul>\r\n                </TabPane>\r\n            </Tabs>\r\n        )\r\n    }\r\n}\r\n\r\n","desc":""},{"example":<Demo2 />,"title":" 基础tab8","code":"/**\n *\n * @title 基础tab8\n * @description\n *\n */\n\nimport React, { Component } from 'react';\nimport Tabs, { TabPane, TabContent, ScrollableInkTabBar } from 'bee-tabs';\n\nclass Demo2 extends Component {\n    constructor(props) {\n        super(props);\n        this.state = ({\n            activeKey: \"1\",\n            start: 0,\n        })\n    }\n    onChange = (activeKey) => {\n        console.log(`onChange ${activeKey}o-^-o`);\n        this.setState({\n            activeKey,\n        });\n    }\n\n    onTabClick = (key) => {\n        console.log(`onTabClick ${key}o^o`);\n        if (key === this.state.activeKey) {\n            this.setState({\n                activeKey: '',\n            });\n        }\n    }\n\n    render() {\n        const start = this.state.start;\n        return (\n            <div style={{ margin: 20 }}>\n                <Tabs\n                    renderTabBar={() => <ScrollableInkTabBar style={{ height: 300 }} onTabClick={this.onTabClick} />}\n                    renderTabContent={() => <TabContent style={{ height: 300 }} />}\n                    activeKey={this.state.activeKey}\n                    tabBarPosition=\"left\"\n                    defaultActiveKey=\"1\"\n                    onChange={this.onChange}\n                >\n                    <TabPane tab=\"望庐山瀑布\" key=\"1\" >\n                        <ul>\n                            <li>日照香炉生紫烟，</li>\n                            <li>遥看瀑布挂前川。</li>\n                            <li>飞流直下三千尺，</li>\n                            <li>疑是银河落九天。</li>\n                        </ul>\n                    </TabPane>\n                    <TabPane tab=\"早发白帝城\" key=\"2\">\n                        <ul>\n                            <li>朝辞白帝彩云间，</li>\n                            <li>千里江陵一日还。</li>\n                            <li>两岸猿声啼不住，</li>\n                            <li>轻舟已过万重山。</li>\n                        </ul>\n                    </TabPane>\n                    <TabPane tab=\"菩萨蛮·平林漠漠烟如织\" key=\"3\">\n                        <ul>\n                            <li>平林漠漠烟如织，寒山一带伤心碧。</li>\n                            <li>暝色入高楼，有人楼上愁。</li>\n                            <li>玉阶空伫立，宿鸟归飞急。</li>\n                            <li>何处是归程？长亭连短亭</li>\n                        </ul>\n                    </TabPane>\n                    <TabPane tab=\"关山月\" key=\"4\">\n                        <ul>\n                            <li>明月出天山，苍茫云海间。</li>\n                            <li>长风几万里，吹度玉门关。</li>\n                            <li>汉下白登道，胡窥青海湾。</li>\n                            <li>由来征战地，不见有人还。</li>\n                        </ul>\n                    </TabPane>\n                </Tabs>\n            </div>\n        )\n    }\n}\n\n","desc":""},{"example":<Demo2___jb_tmp___ />,"title":" 竖向的Tab","code":"/**\n *\n * @title 竖向的Tab\n * @description 通过tabBarPosition属性可以控制Tab做不同方向展示\n *\n */\n\nimport React, { Component } from 'react';\nimport Tabs, { TabPane, TabContent, ScrollableInkTabBar } from 'bee-tabs';\n\nclass Demo2 extends Component {\n    constructor(props) {\n        super(props);\n        this.state = ({\n            activeKey: \"1\",\n            start: 0,\n        })\n    }\n    onChange = (activeKey) => {\n        console.log(`onChange ${activeKey}o-^-o`);\n        this.setState({\n            activeKey,\n        });\n    }\n\n    onTabClick = (key) => {\n        console.log(`onTabClick ${key}o^o`);\n        if (key === this.state.activeKey) {\n            this.setState({\n                activeKey: '',\n            });\n        }\n    }\n\n    render() {\n        const start = this.state.start;\n        return (\n            <div style={{ margin: 20 }}>\n                <Tabs\n                    renderTabBar={() => <ScrollableInkTabBar style={{ height: 300 }} onTabClick={this.onTabClick} />}\n                    renderTabContent={() => <TabContent style={{ height: 300 }} />}\n                    activeKey={this.state.activeKey}\n                    tabBarPosition=\"left\"\n                    defaultActiveKey=\"1\"\n                    onChange={this.onChange}\n                >\n                    <TabPane tab=\"望庐山瀑布\" key=\"1\" >\n                        <ul>\n                            <li>日照香炉生紫烟，</li>\n                            <li>遥看瀑布挂前川。</li>\n                            <li>飞流直下三千尺，</li>\n                            <li>疑是银河落九天。</li>\n                        </ul>\n                    </TabPane>\n                    <TabPane tab=\"早发白帝城\" key=\"2\">\n                        <ul>\n                            <li>朝辞白帝彩云间，</li>\n                            <li>千里江陵一日还。</li>\n                            <li>两岸猿声啼不住，</li>\n                            <li>轻舟已过万重山。</li>\n                        </ul>\n                    </TabPane>\n                    <TabPane tab=\"菩萨蛮·平林漠漠烟如织\" key=\"3\">\n                        <ul>\n                            <li>平林漠漠烟如织，寒山一带伤心碧。</li>\n                            <li>暝色入高楼，有人楼上愁。</li>\n                            <li>玉阶空伫立，宿鸟归飞急。</li>\n                            <li>何处是归程？长亭连短亭</li>\n                        </ul>\n                    </TabPane>\n                    <TabPane tab=\"关山月\" key=\"4\">\n                        <ul>\n                            <li>明月出天山，苍茫云海间。</li>\n                            <li>长风几万里，吹度玉门关。</li>\n                            <li>汉下白登道，胡窥青海湾。</li>\n                            <li>由来征战地，不见有人还。</li>\n                        </ul>\n                    </TabPane>\n                </Tabs>\n            </div>\n        )\n    }\n}\n\n","desc":" 通过tabBarPosition属性可以控制Tab做不同方向展示"},{"example":<Demo3 />,"title":" 页签Tab","code":"/**\n *\n * @title 页签Tab\n * @description 通过扩展TabPane和ScrollableInkTabBar的方式，可以完成模拟页签的效果\n *\n */\n\nimport React, {Component} from 'react';\nimport Tabs, {TabPane, TabContent, ScrollableInkTabBar} from 'bee-tabs';\nimport Icon from 'bee-icon';\n\nlet index = 1;\nconst content = `问世间、情为何物，只教生死相许？天南地北双飞客，老翅几回寒暑。欢乐趣，离别苦，\n就中更有痴儿女。君应有语，渺万里层云，千山暮雪，只影向谁去？横汾路，寂寞当年箫鼓，荒烟依旧平楚。招魂楚些何嗟及，\n山鬼暗谛风雨。天也妒，未信与，莺几燕子俱黄土。千秋万古，为留待骚人，狂歌痛饮，来访雁丘处。`;\n\nclass Demo3 extends Component {\n    state = {\n        tabs: [{\n            title: '摸鱼儿',\n            content: content\n        }],\n        activeKey: '摸鱼儿',\n    };\n\n    onTabChange = (activeKey) => {\n        this.setState({\n            activeKey,\n        });\n    }\n\n    construct() {\n        const disabled = true;\n        return this.state.tabs.map((t) => {\n            return (\n                <TabPane\n                tab={<span>{t.title}\n                    <Icon\n                        type=\"uf-close-c\"\n                        className=\"close-icon\"\n                        onClick={this.remove.bind(this, t.title)}\n                    />\n                </span>}\n                key={t.title}\n            >\n                <div style={{padding: 100}}>\n                    {t.content}\n                </div>\n            </TabPane>);\n        }).concat([\n            <TabPane\n                tab={<a style={{color: 'black', cursor: 'pointer'}} onClick={this.add}> + 添加</a>}\n                disabled={disabled}\n                key={'__add'}\n            />,\n        ]);\n    }\n\n    // 删除\n    remove = (title, e) => {\n        e.stopPropagation();\n        if (this.state.tabs.length === 1) {\n            alert('只剩一个，不能删');\n            return;\n        }\n        let foundIndex = 0;\n        const after = this.state.tabs.filter((t, i) => {\n            if (t.title !== title) {\n                return true;\n            }\n            foundIndex = i;\n            return false;\n        });\n        let activeKey = this.state.activeKey;\n        if (activeKey === title) {\n            if (foundIndex) {\n                foundIndex--;\n            }\n            activeKey = after[foundIndex].title;\n        }\n        this.setState({\n            tabs: after,\n            activeKey,\n        });\n    }\n\n    clear = () => {\n        let { tabs } = this.state;\n        this.setState({\n            tabs:  [tabs.shift()]\n        })\n    }\n\n    // 增加\n    add = (e) => {\n        e.stopPropagation();\n        index++;\n        const newTab = {\n            title: `名称: ${index}`,\n            content: `内容: ${content}`,\n        };\n        this.setState({\n            tabs: this.state.tabs.concat(newTab),\n            activeKey: `名称: ${index}`,\n        });\n    }\n\n    renderTabBar = () => {\n        return (\n            <ScrollableInkTabBar\n                extraContent={\n                    <Icon\n                        type=\"uf-del\"\n                        className=\"clear-icon\"\n                        onClick={this.clear}\n                        title=\"清空\"\n                    />\n                }\n            />\n            )\n\n    }\n\n    render() {\n\n        return (\n            <div style={{margin: 20}}>\n\n                <Tabs\n                    renderTabBar={ this.renderTabBar }\n                    activeKey={this.state.activeKey}\n                    onChange={this.onTabChange}\n                    tabBarStyle=\"fade\"\n                    defaultActiveKey=\"摸鱼儿\"\n                >\n                    {this.construct()}\n                </Tabs>\n            </div>\n        );\n    }\n}\n\n\n","desc":" 通过扩展TabPane和ScrollableInkTabBar的方式，可以完成模拟页签的效果"},{"example":<Demo4 />,"title":" 基础tab10","code":"/**\n *\n * @title 基础tab10\n * @description\n *\n */\n\nimport React, { Component } from 'react';\nimport Tabs, { TabPane } from 'bee-tabs';\nimport TabContent from 'bee-tabs';\nimport ScrollableInkTabBar from 'bee-tabs';\nimport InkTabBar from 'bee-tabs';\n\nclass PanelContent extends React.Component {\n    constructor(props) {\n        super(props);\n        console.log(this.props.id, 'constructor');\n    }\n\n    componentWillReceiveProps(nextProps) {\n        console.log(nextProps.id, 'componentWillReceiveProps');\n    }\n\n    render() {\n        const length = Math.round(10 * (Math.random()) + 4);\n        const count = new Array(length);// new Array(4) skip forEach ....\n        for (let i = 0; i < length; i++) {\n            count[i] = 1;\n        }\n        const content = new Array(Math.round(100 * (Math.random())) + 4).join(` ${this.props.id}`);\n        const els = count.map((c, i) => {\n            return <p key={i}>{content}</p>;\n        });\n        return <div>{els}</div>;\n    }\n}\n\nfunction construct(start, num) {\n    const ends = [];\n    let index = 1;\n    for (let i = start; i < start + num; i++) {\n        ends.push(<TabPane\n            placeholder={`loading ${i}`}\n            tab={`tab ${i}`}\n            disabled={!!(i % 2)}\n            key={index}\n        >\n            <PanelContent id={i} />\n        </TabPane>);\n        index++;\n    }\n    return ends;\n}\n\nclass Demo10 extends React.Component {\n    state = {\n        tabBarPosition: 'top',\n        activeKey: '3',\n        start: 0,\n    };\n\n    onChange = (key) => {\n        console.log(`onChange ${key}`);\n    }\n\n    onChange2 = (activeKey) => {\n        this.setState({ activeKey });\n    }\n\n    onTabClick = (key) => {\n        console.log(`onTabClick ${key}`);\n    }\n\n    tick = () => {\n        this.setState({\n            start: this.state.start + 10,\n        });\n    }\n\n    changeTabPosition = (e) => {\n        this.setState({\n            tabBarPosition: e.target.value,\n        });\n    }\n\n    scrollToActive = () => {\n        this.bar.scrollToActiveTab();\n    }\n\n    switchToLast = (ends) => {\n        if (this.state.activeKey !== ends[ends.length - 1].key) {\n            this.setState({ activeKey: ends[ends.length - 1].key }, this.scrollToActive);\n        } else {\n            this.scrollToActive();\n        }\n    }\n\n    saveBar = (bar) => {\n        this.bar = bar;\n    }\n\n    render() {\n        const start = this.state.start;\n        const ends = construct(start, 9);\n        const ends2 = construct(start, 3);\n        const tabBarPosition = this.state.tabBarPosition;\n        let style;\n        let contentStyle;\n        contentStyle = {\n            height: 400,\n        };\n        if (tabBarPosition === 'left' || tabBarPosition === 'right') {\n            style = contentStyle;\n        } else {\n            style = {\n                width: 500,\n            };\n        }\n\n        return (\n            <div style={{ margin: 20 }}>\n                <h2>Scroll Tabs</h2>\n                <div>\n                    <button onClick={() => this.switchToLast(ends)}>\n                        switch to last tab\n          </button>\n                    <Tabs\n                        activeKey={this.state.activeKey}\n                        style={style}\n                        tabBarPosition={this.state.tabBarPosition}\n                        renderTabBar={() => <ScrollableInkTabBar\n                            ref={this.saveBar}\n                            onTabClick={this.onTabClick}\n                        />}\n                        renderTabContent={() => <TabContent style={contentStyle} />}\n                        onChange={this.onChange2}\n                    >\n                        {ends}\n                    </Tabs>\n                </div>\n                <button onClick={this.tick}>rerender</button>\n            </div>\n        );\n    }\n}\n\n","desc":""},{"example":<Demo5 />,"title":" 基础tab11","code":"/**\n *\n * @title 基础tab11\n * @description\n *\n */\n\nimport React, { Component } from 'react';\nimport Tabs, { TabPane } from 'bee-tabs';\nimport TabContent from 'bee-tabs';\nimport ScrollableInkTabBar from 'bee-tabs';\nimport InkTabBar from 'bee-tabs';\nimport createClass from 'create-react-class';\n\nclass PanelContent extends Component {\n    constructor(props) {\n        super(props);\n        console.log(this.props.id, 'constructor');\n    }\n\n    componentWillReceiveProps() {\n        console.log(this.props.id, 'componentWillReceiveProps');\n    }\n\n    render() {\n        const count = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1];// new Array(4) skip forEach ....\n        const els = count.map((c, i) => {\n            return (<p key={i}>\n                <button>{this.props.id}</button>\n            </p>);\n        });\n        return <div style={{ height: 200, overflow: 'auto' }}>{els}</div>;\n    }\n}\n\nconst defaultTabKey = '2';\n\nconst Demo11 = createClass({\n    getInitialState() {\n        return {\n            start: 0,\n            tabKey: defaultTabKey,\n        };\n    },\n\n    onChange(key) {\n        console.log(`onChange ${key}`);\n    },\n\n    onTabClick(key) {\n        console.log(`onTabClick ${key}`);\n        this.setState({\n            tabKey: key,\n        });\n    },\n\n    tick() {\n        this.setState({\n            start: this.state.start + 10,\n        });\n    },\n\n    render() {\n        const start = this.state.start;\n        return (\n            <div>\n                <h1>Simple Tabs</h1>\n                <p>current: {this.state.tabKey}</p>\n                <Tabs\n                    defaultActiveKey={defaultTabKey}\n                    renderTabBar={() => <ScrollableInkTabBar onTabClick={this.onTabClick} />}\n                    renderTabContent={() => <TabContent />}\n                    onChange={this.onChange}\n                >\n                    <TabPane tab={`tab ${start}`} key=\"1\">\n                        <PanelContent id={start} />\n                    </TabPane>\n                    <TabPane tab={`tab ${start + 1}`} key=\"2\">\n                        <PanelContent id={start + 1} />\n                    </TabPane>\n                    <TabPane tab={`tab ${start + 2}`} key=\"3\">\n                        <PanelContent id={start + 2} />\n                    </TabPane>\n                    <TabPane tab={`tab ${start + 3}`} key=\"4\">\n                        <PanelContent id={start + 3} />\n                    </TabPane>\n                    <TabPane tab={`tab ${start + 4}`} key=\"5\">\n                        <PanelContent id={start + 4} />\n                    </TabPane>\n                    <TabPane tab={`tab ${start + 5}`} key=\"6\">\n                        <PanelContent id={start + 5} />\n                    </TabPane>\n                    <TabPane tab={`tab ${start + 6}`} key=\"7\">\n                        <PanelContent id={start + 6} />\n                    </TabPane>\n                    <TabPane tab={`tab ${start + 8}`} key=\"8\">\n                        <PanelContent id={start + 8} />\n                    </TabPane>\n                    <TabPane tab={`tab ${start + 9}`} key=\"9\">\n                        <PanelContent id={start + 9} />\n                    </TabPane>\n                </Tabs>\n                <button onClick={this.tick}>rerender</button>\n            </div>\n        );\n    },\n});\n\n","desc":""},{"example":<Demo6 />,"title":" 基础tab12","code":"/**\n *\n * @title 基础tab12\n * @description\n *\n */\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Tabs, { TabPane } from 'bee-tabs';\nimport TabContent from 'bee-tabs';\nimport ScrollableInkTabBar from 'bee-tabs';\nimport { Router, Route, IndexRoute, hashHistory } from 'react-router';\n\nconst Tab1 = () => <div>tab1</div>;\nconst Tab2 = () => <div>tab2</div>;\n\nclass App extends React.Component {\n    componentWillMount() {\n        this.data = [{\n            key: 'tab1',\n            component: <Tab1 />,\n        }, {\n            key: 'tab2',\n            component: <Tab2 />,\n        }];\n    }\n    onChange = (key) => {\n        // for demo, better use router api\n        window.location.hash = key;\n    }\n    render() {\n        let activeKey = 'tab1';\n        const { children } = this.props;\n        if (children) {\n            this.data.forEach((d) => {\n                if (d.component.type === children.type) {\n                    // for demo, better immutable\n                    d.component = children;\n                    activeKey = d.key;\n                }\n            });\n        }\n        const tabs = this.data.map(d => <TabPane key={d.key} tab={d.key}>{d.component}</TabPane>);\n        return (\n            <Tabs\n                activeKey={activeKey}\n                onChange={this.onChange}\n                renderTabBar={() => <ScrollableInkTabBar />}\n                renderTabContent={() => <TabContent />}\n            >\n                {tabs}\n            </Tabs>\n        );\n    }\n}\nclass demo12 extends React.Component {\n    render() {\n        return (\n            <Router history={hashHistory}>\n                <Route path=\"/\" component={App}>\n                    <IndexRoute component={Tab1} />\n                    <Route path=\"tab1\" component={Tab1} />\n                    <Route path=\"tab2\" component={Tab2} />\n                </Route>\n            </Router>\n        )\n    }\n}\n\n/*ReactDOM.render(\n    <Router history={hashHistory}>\n        <Route path=\"/\" component={App}>\n            <IndexRoute component={Tab1} />\n            <Route path=\"tab1\" component={Tab1} />\n            <Route path=\"tab2\" component={Tab2} />\n        </Route>\n    </Router>\n    , document.getElementById(''));*/","desc":""}]


class Demo extends Component {
    constructor(props){
        super(props);
        this.state = {
            open: false
        }
        this.handleClick = this.handleClick.bind(this);
    }
    handleClick() {
        this.setState({ open: !this.state.open })
    }

    render () {
        const { title, example, code, desc  } = this.props;
        let caret = this.state.open ? CARETUP : CARET;
        let text = this.state.open ? "隐藏代码" : "查看代码";

        const footer = (
            <Button shape="block" onClick={ this.handleClick }>
                { caret }
                { text }
            </Button>
        );


        return (
            <Col md={12} >
                <h3>{ title }</h3>
                <p>{ desc }</p>
                <Panel collapsible expanded={ this.state.open } colors='bordered' header={ example } footer={footer} footerStyle = {{padding: 0}}>
                    <pre><code className="hljs javascript">{ code }</code></pre>
                </Panel>
            </Col>
        )
    }
}

class DemoGroup extends Component {
    constructor(props){
        super(props)
    }
    render () {
        return (
                <Row>
                    {DemoArray.map((child,index) => {

                        return (
                            <Demo example= {child.example} title= {child.title} code= {child.code} desc= {child.desc} key= {index}/>
                        )

                    })}
                </Row>
        )
    }
}

ReactDOM.render(<DemoGroup/>, document.getElementById('tinperBeeDemo'));
